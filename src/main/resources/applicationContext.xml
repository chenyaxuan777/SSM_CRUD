<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
">
        <!--    spring的配置文件，这里主要配置和业务逻辑有关的-->
        <!--数据源、事务控制、XXX-->

        <!--spring和springmvc不同，它除了控制器不要，其他的都要-->
        <context:component-scan base-package="crud">
            <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        </context:component-scan>
        <!--引入jdbc数据库配置文件-->
        <context:property-placeholder location="classpath:dbconfig.properties"/>
        <!--配置数据源-->
        <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
            <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
            <property name="driverClass" value="${jdbc.driverClass}"></property>
            <property name="user" value="${jdbc.user}"></property>
            <property name="password" value="${jdbc.password}"></property>
        </bean>

        <!--整合mybatis-->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <!--mybatis配置文件位置-->
            <property name="configLocation" value="classpath:mybatis-config.xml"></property>
            <property name="dataSource" ref="pooledDataSource"></property>
            <!--指定mybatis,mapper文件的位置-->
            <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
        </bean>
<!--        配置扫描器，将mybatis接口的实现加入到ioc容器中-->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
            <property name="basePackage" value="crud.dao"></property>
        </bean>

<!--        事务控制-->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="pooledDataSource"></property>
        </bean>

<!--        开启基于注解的事务，使用xml配置形式的事务-->
        <aop:config>
<!--            切入点表达式-->
            <aop:pointcut id="txPoint" expression="execution(* crud.service..*(..))"/>
<!--            事务增强-->
            <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
        </aop:config>
<!--        配置事务增强:事务如何切入-->
        <tx:advice id="txAdvice" transaction-manager="transactionManager">
            <tx:attributes>
                <tx:method name="*"/>
                <tx:method name="get" read-only="true"/>
            </tx:attributes>
        </tx:advice>

<!--        Spring配置文件的核心：数据源、与mybatis的整合、事务控制-->
</beans>